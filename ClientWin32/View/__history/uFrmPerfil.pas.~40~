unit uFrmPerfil;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uFrmModelo, Data.DB, Vcl.ActnList,
  Vcl.Menus, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.ToolWin, Vcl.Mask, Vcl.DBCtrls, DBClient;

type
  TTipoPermissao = (tpCheck, tpUncheck, tpInvert);
  TFrmPerfil = class(TfrmModelo)
    Label3: TLabel;
    Label4: TLabel;
    DBEdit1: TDBEdit;
    DBEdit2: TDBEdit;
    DBGrid2: TDBGrid;
    dsPerfilConf: TDataSource;
    Panel2: TPanel;
    spdbtnInvert: TSpeedButton;
    spdbtnUnCheck: TSpeedButton;
    spdbtnCheck: TSpeedButton;
    spdbtnCarregaPadrao: TSpeedButton;
    ImgPermissao: TImageList;
    procedure spdbtnCheckClick(Sender: TObject);
    procedure spdbtnUnCheckClick(Sender: TObject);
    procedure spdbtnInvertClick(Sender: TObject);
    procedure DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure DBGrid2CellClick(Column: TColumn);
    procedure spdbtnCarregaPadraoClick(Sender: TObject);
  private
    FAcoes: TCustomActionList;
    procedure CarregaPadroesAcoes;
    procedure TrocaPermissao(TipoPermissao : TTipoPermissao);
    { Private declarations }
  public
    constructor Create(AOwner : TComponent; ActionList: TCustomActionList);reintroduce;
    { Public declarations }
  end;

var
  FrmPerfil: TFrmPerfil;

implementation

uses
  uDM;

{$R *.dfm}

{ TFrmPerfil }

procedure TFrmPerfil.CarregaPadroesAcoes;
var
  I: Integer;
begin
  TClientDataset(dsPerfilConf.DataSet).EmptyDataSet;
  for I := 0 to Pred(FAcoes.ActionCount) do
  begin
    With dsPerfilConf.DataSet do
    begin
      Append;
      FieldByName('NAME').AsString      := TAction(FAcoes.Actions[I]).Name;
      FieldByName('CAPTION').AsString   := TAction(FAcoes.Actions[I]).Caption;
      FieldByName('PERMISSAO').AsString := 'F';
      Post;
    end;
  end;
end;

constructor TFrmPerfil.Create(AOwner: TComponent; ActionList: TCustomActionList);
begin
  inherited Create(Aowner);
  FAcoes:= ActionList;
end;

procedure TFrmPerfil.DBGrid2CellClick(Column: TColumn);
begin
  inherited;
  if Column.FieldName = 'PERMISSAO' then
  begin
    dsPerfilConf.DataSet.Edit;
    if Column.Field.AsString = 'V' then
      Column.Field.AsString := 'F'
    else
      Column.Field.AsString := 'V';
    dsPerfilConf.DataSet.Post;
  end;
end;

procedure TFrmPerfil.DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  inherited;
  if Column.FieldName = 'PERMISSAO' then
  begin
    DBGrid2.Canvas.FillRect(Rect);
    ImgPermissao.Draw(DBGrid2.Canvas,Rect.Left + 10, Rect.Top, -1);
    if Column.Field.AsString = 'V' then
      ImgPermissao.Draw(DBGrid2.Canvas,Rect.Left + 10, Rect.Top, 1)
    else
      ImgPermissao.Draw(DBGrid2.Canvas,Rect.Left + 10, Rect.Top, 0);
  end;
end;

procedure TFrmPerfil.spdbtnInvertClick(Sender: TObject);
begin
  inherited;
  TrocaPermissao(tpInvert);
end;

procedure TFrmPerfil.spdbtnUnCheckClick(Sender: TObject);
begin
  inherited;
  TrocaPermissao(tpUncheck)
end;

procedure TFrmPerfil.spdbtnCheckClick(Sender: TObject);
begin
  inherited;
  TrocaPermissao(TpCheck);
end;

procedure TFrmPerfil.spdbtnCarregaPadraoClick(Sender: TObject);
begin
  inherited;
  CarregaPadroesAcoes;
end;

procedure TFrmPerfil.TrocaPermissao(TipoPermissao: TTipoPermissao);
begin
  with dsPerfilConf.DataSet do
  begin
    if not IsEmpty then
    begin
      First;
      DisableControls;
      while not Eof do
      begin
        Edit;
        case TipoPermissao of
          tpCheck:   FieldByName('PERMISSAO').AsString := 'V' ;
          tpUncheck: FieldByName('PERMISSAO').AsString := 'F' ;
          tpInvert: if FieldByName('PERMISSAO').AsString = 'V' then
                       FieldByName('PERMISSAO').AsString := 'F'
                    else
                       FieldByName('PERMISSAO').AsString := 'V' ;
        end;
        Post;
        Next;
      end;
      EnableControls;
    end;
  end;
end;

end.
